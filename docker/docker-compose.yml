# Docker Engine 18.06.0+
version: '3.7'

services:

  #  elasticsearch:
  #    build: ./docker-elastic
  #    ports:
  #      - 9200:9200
  #      - 9300:9300
  #    volumes:
  #      - elasticsearch-data:/usr/share/elasticsearch/data
  #    networks:
  #      - esnet
  #    restart: always
  #
  #  kibana:
  #    build: ./docker-kibana
  #    ports:
  #      - 5601:5601
  #    environment:
  #      - ELASTICSEARCH_URL=http://localhost:9200
  #    links:
  #      - elasticsearch:elasticsearch
  #    restart: always

  mysql:
    build: ./docker-mysql
    ports:
      - 3306:3306
      - 33060:33060
    volumes:
      - ./docker-mysql/init:/docker-entrypoint-initdb.d
      - ./docker-mysql/conf/:/etc/mysql/conf.d
    networks:
      - sonarnet
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_pass
      TZ: "Asia/Tokyo"
    restart: always

  #  nginx:
  #    build: ./docker-nginx
  #    ports:
  #      - 8011:80
  #      - 8080:8080
  #    restart: always

  phpmyadmin:
    build: ./docker-phpmyadmin
    links:
      - mysql
    ports:
      - 8021:80
      - 8280:8280
      - 9000:9000
    volumes:
      - /sessions
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=root
    restart: always

  #  sonarqube:
  #    build: ./docker-sonar
  #    depends_on:
  #      - mysql
  #    volumes:
  #      - sonarqube_conf:/opt/sonarqube/conf
  #      - sonarqube_data:/opt/sonarqube/data
  #      - sonarqube_extensions:/opt/sonarqube/extensions
  #      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
  #    networks:
  #      - sonarnet
  #    command: -Dsonar.web.context=/sonar
  #    ports:
  #      - 9092:9000
  #    environment:
  #      - SONAR_JDBC_URL=jdbc:mysql://localhost:3306/sonar?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=utf8
  #    restart: always

  zipkin:
    build: ./docker-zipkin
    ports:
      - 9410:9410
      - 9411:9411
    #    environment:
    #      - STORAGE_TYPE=elasticsearch
    #      - ES_HOSTS=elasticsearch
    #    depends_on:
    #      - elasticsearch
    restart: always

networks:
  esnet:
#  sonarnet:
#    driver: bridge
volumes:
  #  elasticsearch-data:
  #    driver: local
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins: